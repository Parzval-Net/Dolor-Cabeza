
export const getIntensityColor = (intensity: number) => {
  if (intensity <= 3) return "from-emerald-400 to-emerald-600";
  if (intensity <= 6) return "from-orange-400 to-orange-600";
  if (intensity <= 8) return "from-red-400 to-red-600";
  return "from-red-600 to-red-800";
};

export const getIntensityText = (intensity: number) => {
  if (intensity <= 3) return "Leve";
  if (intensity <= 6) return "Moderado";
  if (intensity <= 8) return "Severo";
  return "Extremo";
};

export const getMoodEmoji = (mood: string | undefined | null) => {
  // A√±adir console.log para debuggear qu√© valores estamos recibiendo
  console.log('Mood received:', mood, 'Type:', typeof mood);
  
  // Si mood no existe, est√° vac√≠o o es null/undefined, usar un emoji basado en intensidad
  if (!mood || mood.trim() === '') {
    console.log('Mood is empty, using default');
    return 'üòê';
  }
  
  // Normalizar el estado a min√∫sculas y eliminar espacios/guiones
  const normalizedMood = mood.toLowerCase().trim().replace(/[-_\s]/g, '');
  
  console.log('Normalized mood:', normalizedMood);
  
  const moodMap: Record<string, string> = {
    // Valores posibles sin espacios ni guiones
    'muymal': 'üò∞',
    'terrible': 'üò∞',
    'mal': 'üòü',
    'malo': 'üòü',
    'regular': 'üòê',
    'normal': 'üòê',
    'neutro': 'üòê',
    'bien': 'üôÇ',
    'bueno': 'üôÇ',
    'muybueno': 'üòÑ',
    'muybien': 'üòÑ',
    'excelente': 'üòÑ',
    'genial': 'üòÑ',
    'feliz': 'üòÑ',
    'contento': 'üôÇ',
    'triste': 'üòü',
    'ansioso': 'üò∞',
    'calmado': 'üôÇ',
    'estresado': 'üòü',
    'relajado': 'üôÇ',
    // Valores num√©ricos como string
    '1': 'üò∞',
    '2': 'üòü',
    '3': 'üòê',
    '4': 'üôÇ',
    '5': 'üòÑ'
  };
  
  const emoji = moodMap[normalizedMood] || 'üòê';
  console.log('Selected emoji:', emoji);
  
  return emoji;
};

export const getMoodText = (mood: string | undefined | null) => {
  // Si mood no existe, est√° vac√≠o o es null/undefined
  if (!mood || mood.trim() === '') {
    return 'No especificado';
  }
  
  // Normalizar el estado y convertir a texto legible
  const normalizedMood = mood.toLowerCase().trim().replace(/[-_\s]/g, '');
  
  const moodTextMap: Record<string, string> = {
    'muymal': 'Muy mal',
    'terrible': 'Terrible',
    'mal': 'Mal',
    'malo': 'Malo',
    'regular': 'Regular',
    'normal': 'Normal',
    'neutro': 'Neutro',
    'bien': 'Bien',
    'bueno': 'Bueno',
    'muybueno': 'Muy bueno',
    'muybien': 'Muy bien',
    'excelente': 'Excelente',
    'genial': 'Genial',
    'feliz': 'Feliz',
    'contento': 'Contento',
    'triste': 'Triste',
    'ansioso': 'Ansioso',
    'calmado': 'Calmado',
    'estresado': 'Estresado',
    'relajado': 'Relajado',
    // Valores num√©ricos como string
    '1': 'Muy mal',
    '2': 'Mal',
    '3': 'Regular',
    '4': 'Bien',
    '5': 'Muy bien'
  };
  
  return moodTextMap[normalizedMood] || 'Regular';
};

// Nueva funci√≥n para obtener emoji basado en intensidad cuando no hay mood
export const getMoodEmojiFromIntensity = (intensity: number) => {
  if (intensity <= 2) return 'üôÇ';
  if (intensity <= 4) return 'üòê';
  if (intensity <= 6) return 'üòü';
  if (intensity <= 8) return 'üò∞';
  return 'üò±';
};

export const getStressColor = (level: number) => {
  if (level <= 2) return "bg-green-100 text-green-800 border-green-200";
  if (level <= 3) return "bg-yellow-100 text-yellow-800 border-yellow-200";
  return "bg-red-100 text-red-800 border-red-200";
};

export const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('es-ES', {
    weekday: 'long',
    day: 'numeric',
    month: 'long',
    year: 'numeric'
  });
};
